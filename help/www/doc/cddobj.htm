<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Введение в идеологию построения системы PasCAD</TITLE>
</head>

<body background="../fon1.jpg" bgproperties="fixed">

<table align="center" border="0"  cellpadding="0" cellspacing="0" width="345">
  <tr>
    <td width="30" background="../smround.jpg" height="30">
    </td>
    <td width="315">
    </td>
  </tr>
  <tr>
    <td width="30" height="60">
    </td>
    <td align="center" valign="center" width="315" background="../adround.jpg">
      <a href="..\cddoc.htm"><font size="1">PasCAD<br>Документация</font></a>
    </td>
  </tr>
</table>


<h1 align="center">Введение в идеологию построения системы</h1>
<P>Настоящая система является настольной, т.е. ориентированной на персональный компьютер. Еще более конкретезируя: на персональный компьютер фирмы IBM или совместимый с системой Windows95 или более поздней. В настоящей версии реальная многопользовательская работа (одновременная работа нескольких пользователей над одной схемой) не реализована, однако реализация такой возможности является делом будущего. Вместе с тем, возможна работа в сети, хотя и над разными проектами (возможен одновременный просмотр).</P>
<P>Еденицей хранения информации является <I>файл</I> (или в терминах Windows95 – <I>документ</I>). Каждый отдельный файл содержит отдельный <I>проект</I>. Проект содержит группу объектов различных типов и различного назначения, которые рассмотрены позже.</P>
<P>В практическом разрезе объекты представляют собой графическое изображение схем электрических принципиальных, печатных плат, перечня элементов. Схема электрическая принципиальная и печатная плата являются не просто рисунком подобно чертежу на листе бумаги эти объекты являются комплексом состоящим из других объектов. Такое построение дает возможность значительно автоматизировать труд инженера схемотехника и кардинально упрощает переход к графическим изображениям печатных плат, их расстановку, трассировку и дальнейшее производство.</P>
<P>Четкое понимание объектов позволяет использовать систему более полно и грамотно. Далее следует подробное описание объектной иерархии.</P>

<h1>Идеология объектной иерархии</h1>
<P>Пользователям хорошо знакомым с системой САПР PCAD 4.5 рекомендуется сразу перейти к разделу сравнения САПР PCAD 4.5 и PASCAD3. В настоящем же разделе приведено полное описание идеологии построения объектной иерархии системы ориентированное на пользователей, вообще не знакомых с САПР схемотехнического проектирования.</P>
<P>Основным результатом работы САПР можно считать следующее:</P>
<P>упакованная печатная плата</P>
<P>графическое изображение схемы электрической принципиальной</P>
<P>графическое изображение переченя элементов</P>
<P>К настоящему времени в персональных компьютерах еденицей хранения информации на дисках является файл. Еденицей хранения информации для САПР PASCAD3 является файл <B>базы данных</B>. Еще базу данных можно представить как единицу проектирования.</P>
<P ALIGN="CENTER"><IMG SRC="Image1.gif"></P>
<P>&nbsp;</P>
<P>Файл базы данных содержит всю необходимую информацию для одной платы или нескольних связанных плат:</P>
<P>коструктив печатных плат с расположенными на них элементами</P>
<P>листы схем электрических принципиальных отражающих эти платы</P>
<P>перечень элементов</P>
<P>список используемых в схеме библиотечных элементов (так называемые символы)</P>
<P>список используемых в плате библиотечных элементов (корпуса)</P>
<P>Эти же файлы могут представлять и <B>библиотеки</B>, для этого в них есть раздел компоненты, в котором представлены компоненты (то есть компонент его схемное изображение (<B>символ</B>), его корпус и его параметры).</P>
<P>Следует подчеркнуть особенность этой САПР, которая состоит в том, что элементы, нарисованные в схеме не обязательно должны устанавливаться на печатные платы. Они могут быть установлены и для навесного монтажа. С целью автоматизации и этого процесса предусмотрена программа экспорта конструктива в AutoCAD.</P>
<P>Библиотеки фрагментов схем могут дополнительно содержать и набор схем в разных листах.</P>
<P>Вообще, любой файл можно трактовать как <I>библиотеку</I> или <I>как базу</I> данных в зависимости от содержимого. Система на этот счет не делает никаких предположений. Это упрощает использование баз данных в качестве библиотек и наоборот.</P>
<P>Итак, еденицей хранения информации в файле является <B>проект</B> (везде далее под проектом понимается и <I>база данных</I> и <I>библиотека</I>, пояснения см.выше). Проект содержит объекты сгруппированные в следущие классы:</P>
<P><A HREF="#chSymbol"><U>символы</U></A></P>
<P><A HREF="#chPrt"><U>корпуса</U></A></P>
<P><A HREF="#chComp"><U>компоненты</U></A></P>
<P><A HREF="#chSheet"><U>схемы</U></A></P>
<P><A HREF="#chPlate"><U>платы</U></A></P>
<P><A HREF="#chList"><U>перечень элементов</U></A></P>
<P>Рассмотрим эти классы объектов подробнее: </P>
<B><P>Символы</B> представляют собой схемное обозначение какого-нибудь элемента, например резистора. Кроме того, символ содержит “упаковочную” информацию (цоколевку) – это соответствие имен выводов, которые присутствуют в схеме реальным номерам выводов, которые имеет тот или иной компонент.</P>
<B><P>Корпус</B> представляет собой упрощенное обозначение компонента используемое в чертежах печатных плат для обозначения расположения этих компонентов на плате. Корпус имеет ножки, отражающие реальные выводы компонента, которыми они устанавливаются в печатную плату. Отметим, что взаимное расположение ножек корпуса должно точно соответствовать реальным компонентам, тогда как изображение корпуса имеет более условный вид и часто представляет собой вид сверху на компонент.</P>
<B><P>Компонент</B> определяет реальный физический компонент через совокупность следующих объектов: схемное изображение (символ), изображение корпуса (корпус) и конкретные параметры, число и номенклатура которых произвольны.</P>
<B><P>Лист схемы</B> – это объект, который определяет реальный один лист схемы электрической принципиальной. В схему могут входить: схематические обозначения компонентов, цепи, связывающие ножки компонентов между собой и произвольную графику. Отметим, что вся схема может быть нарисована в виде графики, однако автоматический переход от такой схемы к печатной плате не возможен, не говоря уже о трудоемкости подобной работы.</P>
<B><P>Печатная плата</B> – это объект, который определяет физические элементы печатной платы и их взаимное расположение, а также электрические связи между ними. Таким образом, объект печатной платы обладает всей необходимой информацией для размещения элементов на поверхности печатной платы и последующей трассировки печатных соединений. Отметим, что система не содержит пока встроенного трассировщика. В настоящей САПР объект печатная плата является более общим, чем в других системах. Этот объект может отражать не обязательно печатную плату, но также некий конструктив, в котором монтаж выполнен навесным способом. Для выполнения подобного рода чертежей предусмотрен экспорт в САПР AutoCAD.</P>
<B><P>Перечень элементов</B> – объект, который определяет полный перечень элементов проекта составляемый в соответствии с требованиями ГОСТа.</P>
<P>&nbsp;</P>
<P>Таким образом на вершине объектной иерархии находится объект под названием <I>Проект</I>.</P>
<P ALIGN="CENTER"><IMG SRC="Image2.gif"></P>
<P>В общем, взаимодействие объектов, составляющих проект, осуществляется следующим образом: символы, представляющие схемные обозначения элементов и корпуса объединяют компоненты, все вместе они составляют библиотеки компонентов, которые используются для упрощения ввода схем, а также для автоматического переход от схем электрических принципиальных к печатным платам. Электрическую схему проекта отражают листы схем электрических принципиальных. Печатную плату проекта отражает печатная плата под названием <B>Конструктив</B>. Схема состоит из символов и цепей, задающих связи между ножками символов. Плата состоит из корпусов и связей задающих электрические соединения между ножками корпусов. Эти связи в дальнейшем трассируются в печатные проводники. Отличительной особенностью этой системы является то, что печатная плата всегда точно отражает текущее состояние схемы электрической и любое изменение в схеме немедленно отражается в плате. Ключевым моментом создания схем является вставка в них компонентов. Отметим, что вставка в схемы возможна именно компонентов, а не символов, поскольку компонент определяет символ для схемного изображения компонента и корпус компонента, а также его параметры. Поэтому программа корректно размещает в схеме символ от этого компонента с заполненными параметрами компонента, а в печатной плате корпус соответствующий вставленному компоненту.</P>
<h1><A NAME="chLayers">Слои</A></h1>
<P>В системе реализована хорошо себя зарекомендовавшая система <I>слоев</I>. Т.е., каждый графический элемент располагается в одном из зарегестрированных слоев. Слой служит для группировки графических элементов. Для каждого слоя задаются:</P>
<P>Наименование. Любая последовательность букв и знаков до 31 символа длиной.</P>
<P>Цвет. Любой из разрешенных в Вашей системе цветов. Если заданный Вами цвет не может отобразиться Вашей системой, то подбирается ближайший из разрешенных цветов. Вообще цвет задается 32 разрядным числом, поэтому теоретически для слоя можно задать любой из 4 миллиардов цветов, однако практически, близкие по значению цвета не различаются глазом. Вообще же выбор цветов целиком и полностью зависит от Ваших вкусов. Система относительно цвета не делает никаких ограничений.</P>
<P>Состояние. Слой может находиться в одном из следующих состояний:</P>
<P>слой выключен. Элементы нарисованные в таком слое на экране и на принтере не отображаются и для редактирования не доступны.</P>
<P>слой включен. Элементы нарисованные в таком слое отображаются на экране и на принтере, однако доступ к ним для их редактирования закрыт, т.е. редактирование элементов нарисованных во включенном слое не возможно.</P>
<P>слое редактируется. Элементы нарисованные в таком слое отображаются на экране и на принтере, кроме того их можно редактировать.</P>
<P>Существует определенная система слоев по умолчанию, однако допускается добавление, изменение и удаление слоев. При сохранении проекта текущий состав и состояние слоев сохраняется вместе с проектом. При загрузке проекта текущие слои и слои загруженного проекта отождествляются по <B><U>именам</B></U>. Слои загружаемого проекта не имеющие соответствий в текущих слоях добавляются в таблицу текущих слоев. Если загруженный проект является единственным загруженным проектом, то состав и состояние текущих слоев принимаются как в этом загруженном проекте.</P>
<P>Добавление слоев может осуществляться и вручную.</P>
<P>Удаление слоев может осуществляться только вручную и только в том случае, если на удаляемых слоях во всех загруженных проектах нет никакой информации.</P>
<P>&nbsp;</P>
<h1>Взаимодействие между объектами проекта</h1>
<P>Объект типа компонент содержит ссылки на схемное обозначение компонента, а также на корпус компонента. Такое построение позволяет избежать значительного дублирования информации характерного для САПР PCAD. Так например, в библиотеке микросхем серии КР1533 имеется всего 8 корпусов, тогда как компонентов, имеющих эти корпуса в библиотеке насчитывается более сотни.</P>
<P ALIGN="CENTER"><IMG SRC="Image3.gif"></P>
<P>На рисунке представлены взаимосвязи между символами, корпусами и компонентами. Из рисунка видно, что:</P>
<P>два компонента могут иметь одинаковый символ и разные корпуса</P>
<P>два компонента могут иметь разные символы и один корпус</P>
<P>компоненты могут иметь одни и те-же символы и корпуса</P>
<P>компоненты могут иметь свои символы и корпуса</P>
<P>Первая ситуация может быть проиллюстрирована на следующем примере: микросхемы 533ЛА3 и КР1533ЛА3 имеют совершенно одинаковое схемное обозначение и цоколевку, но различные корпуса.</P>
<P>Вторая ситуация может быть проиллюстрирована на следующем примере: микросхемы КР1533ЛА3 и КР1533ЛА4 имеют различные схемные обозначения и цоколевку, но одинаковый тип корпуса с одинаковой нумерацией выводов.</P>
<P>Третья ситуация может быть проиллюстрирована на следующем примере: транзисторы КТ315Б и КТ315В имеют одинаковые схемные обозначения и цоколевку, одинаковые корпуса, но различаются по своим параметрам.</P>
<P>Четвертая ситуация похожа на идеологию САПР PCAD, когда каждый компонент должен иметь свой символ и свой корпус.</P>
<P>Связывание символов и корпусов осуществляется по номерам выводов. Номера выводов для корпуса задаются при создании корпуса в момент вставки ножки корпуса, а номера выводов для символа задаются в момент задания цоколевки, при этом одним и тем-же именам в разных секциях могут соответствовать одинаковые номера выводов, что характерно для неоднородных компонентов. Например, на рисунке представлены две секции неоднородной микросхемы КР140УД20А</P>
<P ALIGN="CENTER"><IMG SRC="Image4.gif">.</P>
<P>На рисунке представлено взаимодействие между символами схемы и корпусами печатной платы.</P>
<P ALIGN="CENTER"><IMG SRC="Image5.gif"></P>
<P>Под “вхождением символа” понимается схемное обозначение компонента в листе схемы. Под “вхождение корпуса” понимается изображение корпуса компонента на печатной плате. Из рисунка видно, что:</P>
<P>несколько вхождений символа могут ссылаться на один символ</P>
<P>несколько вхождений символа могут ссылаться на одно вхождение корпуса, т.е. быть секциями одного компонента, которые на печатной плате представлены одним корпусом</P>
<P>отдельное вхождение символа может ссылаться на отдельный символ, на отдельное вхождение корпуса, такая ситуация характерна для больших микросхем, резисторов, транзисторов и т.п., когда каждому схемному обозначению соответствует точно один корпус на печатной плате.</P>
<P>Рассмотрим примеры: когда различные (или одинаковые) компоненты имеют одинаковые схемные обозначения они ссылаются на один и тот же символ. Несколько вхождений символа могут ссылаться на одно и то-же вхождение корпуса, т.е. быть различными секциями одного и того же компонента.</P>
<P>Несмотря на такую сложную структуру реальная работа очень проста. При вставке компонента в лист схемы автоматически в текущий проект добавляется необходимый символ (если его еще нет), в плату добавляется вхождение корпуса либо в уже имеющемся корпусе занимается очередная секция, в проект добавляется соответствующий корпус (если его еще нет).</P>
<P>Отметим, что вставка компонента не всегда ведет к добавлению вхождения корпуса. Так, если компонент состоит из нескольких секций, вхождение корпуса не добавляется пока есть свободные места в уже имеющемся вхождении соответствующего корпуса. Например, при вставке четырех вхождений символа элемента КР1533ЛА3 будет вставлено только одно вхождение корпуса, поскольку этот компонент имеет четыре секции.</P>
<P>Информация о соответствии символа корпусу берется из объекта Компонент и затем хранится вместе с вхождением символа, таким образом, после вставки вхождения символа Вы можете легко заменить корпус этого вхождения не затрагивая остальные вхождения этого же символа.</P>
<P>На следующем рисунке представлено взаимодействие цепей в проекте.</P>
<P ALIGN="CENTER"><IMG SRC="Image6.gif"></P>
<P>Все цепи в проекте являются глобальными, т.е. если сегменты цепей в разных листах или в одном и том же листе имеют одинаковые имена, то они принадлежат к одной цепи. При вводе и редактировании цепей и шин имя текущей цепи отображается в панели свойств цепи. Система автоматически присваивает <FONT FACE="Times New Roman">вновь вводимым цепям имена вида XNnnnn (например XN0035). Цепи такого вида называются цепями по умолчанию. При копировании цепей предусмотрено три алгоритма поведения:</P>
<P>всем цепям присваиваются новые имена вида XNnnnn</P>
<P>новые имена присваиваются только цепям по умолчанию, т.е. всем цепям, имена которых начинаются с XN будут присвоены имена вида XNnnnn</P>
<P>всем цепям оставляются старые имена</P>

<h1>Проект</h1>
<P>Вершиной объектной иерархии является проект. Для хранения каждого отдельного проекта используется отдельный файл. Проект может трактоваться как библиотека или как база данных совершенно произвольно. Система никаких различий на этот счет не делает, поэтому один и тот же проект можно использовать в качестве базы данных или в качестве библиотеки.</P>
<P ALIGN="CENTER"><IMG SRC="Image7.gif"></P>
<P>Состав проекта отображается в окне проекта, которое появляется при открытии или создании проекта.</P>
<P ALIGN="CENTER"><IMG SRC="Image8.gif"></P>
<P>&nbsp;</P>
<P>В таблице символов представлены все символы (схемные изображения элементов), которые присутствуют в проекте. В окне проекта эта таблица озаглавлена <B>СИМВОЛЫ</B>.</P>
<P>В таблице корпусов представлены все корпуса (изображение корпусов элементов), которые присутствуют в проекте. В окне проекта эта таблица озаглавлена <B>КОРПУСА</B>.</P>
<P>В таблице компонентов представлены все компоненты (указание символа, указание корпуса и параметры конкретного компонента), которые присутствуют в проекте. В окне проекта эта таблица озаглавлена <B>КОМПОНЕНТЫ</B>.</P>
<P>В таблице листов схем представлены все листы схем электрических, из которых состоит проект. В окне проекта эта таблица озаглавлена <B>СХЕМЫ</B>.</P>
<P>В таблице печатных плат представлены все печатные платы, из которых состоит проект. В окне проекта эта таблица озаглавлена <B>ПЛАТЫ</B>.</P>
<P>Перечень элементов это ГОСТ-ориентированный перечень элементов. В окне проекта он находится в разделе <B>Текстовые документы</B>.</P>
<P>Список слоев (см.<A HREF="#chLayers">Слои</A>) отдельного проекта пользователю не доступен.</P>
<P>Комментарий к проекту представляет собой обычный текст, который можно использовать произвольным образом. Так, например, там может помещаться информация относительно содержимого проекта, авторские права и т.п. В проекте Конденсаторы, поставляемым с системой, в комментариях хранится таблица выбора конденсаторов, к которой за необходимой информацией обращается программа выбора конденсаторов.</P>
<P>&nbsp;</P>

<h1><A NAME="chSymbol">Символ</A></h1>
<P>Символы представляют собой схемное обозначение какого-нибудь элемента, например резистора. Кроме того, символ содержит “упаковочную” информацию (цоколевку) – это соответствие имен выводов, которые присутствуют в схеме реальным номерам выводов, которые имеет тот или иной компонент.</P>
<P ALIGN="CENTER"><IMG SRC="Image9.gif"></P>
<P>На практике в каждом символе должны присутствовать показанные на рисунке объекты. Это будет являться гарантией правильного создания символа.</P><IMG SRC="Image10.gif" ALIGN="LEFT" HSPACE=12>
</FONT><P>&nbsp;</P>
<P><B>Графика</B> - используется для рисования схематического изображения элемента.</P>
<P><B>Ножка символа</B> - указывает место, которое является выводом схематического изображения элемента, именно к этому месту и ни к какому другому впоследствии подключаются цепи.</P>
<P><B>Точка привязки</B> - служит для указания точки отсчета схематического изображения элемента, именно вокруг этой точки впоследствии осуществляется поворот элементов.</P>
<P><B>Идентификатор (позиционное обозначение)</B> - указывает место и шаблон позиционного обозначения схематического изображения элемента.</P>
<P><B>Количество секций</B> - определяет количество секций одного и того же символа помещающихся в одном корпусе. Так, например, для ТТЛ микросхемы ЛА3 количество секций равно четырем. Это означает, что в одном корпусе микросхемы ТТЛ распологается четыре логических элемента описываемых символом ЛА3.</P>
<P><B>Цоколевка </B>- задает соответствие имен ножек символов номерам ножек корпуса (по секционно).</P>
<P ALIGN="CENTER"><IMG SRC="Image11.gif"></P>
<P><B>Коментарий</B> - любая текстовая информация. Может быть, например логической функцией, выполняемой логическим элементом.</P>

<h1><A NAME="chSymbolPin">Ножка символа</A></h1>
<P>Ножка символа указывает место, которое является выводом схематического изображения элемента, именно к этому месту и ни к какому другому впоследствии подключаются цепи.</P>
<P ALIGN="CENTER"><IMG SRC="Image12.gif"></P>
<P>На следующем рисунке представлен пример символа с заданными ножками. Для каждой ножки задано место расположения (указывается крестиком), имя ножки и место для номера ножки.</P><IMG SRC="Image13.gif" ALIGN="LEFT" HSPACE=12>
<P>&nbsp;</P>
<P><B>Ножка</B> - точка указывает место, которое является выводом схематического изображения элемента, именно к этому месту и ни к какому другому впоследствии подключаются цепи.</P>
<P><B>Имя ножки</B> - это название состоящее из любого набора символов (не более восьми) определяющее имя вывода.</P>
<P><B>Номер ножки</B> - это шаблон, который указывает место и атрибуты, которые примет номер вывода, когда символ вставляется в лист схемы.</P>
<P><B>Тип ножки</B> - определяет логическое назначение ножки и принимает одно из следующих значений:</P>

<UL>
 <LI>Вход</LI>
 <LI>Выход</LI>
 <LI>Вход/выход</LI>
 <LI>С открытым коллектором</LI>
 <LI>С открытым эмиттером</LI>
 <LI>Тристабильный выход</LI>
 <LI>Тристабильный вход/выход</LI>
 <LI>Аналоговый</LI>
</UL>

<P>Тип ножки может использоваться различными программами анализа принципиальных схем.</P>
<P><B>Атрибуты имени</B> - аналогичны атрибутам текста (см.<A HREF="#chText">Текст</A>)</P>
<P><B>Атрибуты номера</B> - аналогичны атрибутам текста (см.<A HREF="#chText">Текст</A>)</P>

<h1><A NAME="chPrt">Корпус</A></h1>
<P>Корпуса представляют собой графическое изображение корпуса элемента, например, резистора, которое используется для расстановки элементов на печатной плате и проведения трассировки соединений.</P>
<P ALIGN="CENTER"><IMG SRC="Image14.gif"></P>
<P>На практике в каждом корпусе должны присутствовать показанные на рисунке объекты. Это будет являться гарантией правильного создания корпуса.</P><IMG SRC="Image15.gif" ALIGN="LEFT" HSPACE=12>
<P>&nbsp;</P>
<P><B>Графика</B> - используется для рисования изображения корпуса элемента, как правило им является вид на компонент сверху.</P>
<P><B>Ножка корпуса</B> - указывает место, которое является выводом корпуса элемента, именно к этому месту и ни к какому другому впоследствии подключаются цепи.</P>
<P><B>Точка привязки</B> - служит для указания точки отсчета корпуса элемента, именно вокруг этой точки впоследствии осуществляется поворот корпусов.</P>
<P><B>Идентификатор</B> - указывает место и шаблон позиционного обозначения корпуса элемента.</P>
<P><B>Комментарий</B> - задает конкретные параметры для корпуса.</P>

<h1><A NAME="chPrtPin">Ножка корпуса</A></h1>
<P>Ножка корпуса задает точку, расположение которой эквивалентно расположению реального вывода относительно корпуса. К этой точке подключаются печатные проводники.</P>
<P ALIGN="CENTER"><IMG SRC="Image16.gif"></P>
<P>На следующем рисунке представлен пример корпуса с расставленными ножками. Для каждой ножки указано месторасположение (обозначается кружком), номер ножки и место расположения имени ножки.</P><IMG SRC="Image17.gif" ALIGN="LEFT" HSPACE=12>
<P>&nbsp;</P>
<P><B>Ножка</B> - точка, расположение которой эквивалентно расположению реального вывода относительно корпуса. К этой точке подключаются печатные проводники</P>
<P><B>Номер ножки</B> - это название состоящее из любого набора символов (не более восьми) определяющее номер вывода.</P>
<P><B>Имя ножки</B> - это шаблон, который указывает место и атрибуты, которые примет имя вывода, когда корпус вставляется в печатную плату</P>
<P><B>Тип ножки</B> - используется для группировки ножек. Косвенно задает габариты контактной площадки, подключаемой к данной ножке и диаметр отверстия для данной ножки.</P>
<P><B>Атрибуты номера</B> - аналогичны атрибутам текста (см.<A HREF="#chText">Текст</A>)</P>
<P><B>Атрибуты имени</B> - аналогичны атрибутам текста (см.<A HREF="#chText">Текст</A>)</P>

<h1><A NAME="chPads">Контактные площадки</A></h1>
<P>Контактные площадки – это разновидность корпуса, которая представляет собой объект, необходимый для производства печатных плат. Контактные площадки размещаются в таблице корпусов, но в отличие от последних обладают следующими ограничениями:</P>
<P>точка привязки контактной площадки всегда находится в точке 0,0</P>
<P>контактная площадка не должна содержать выводов</P>
<P>контактная площадка не должна иметь идентификатор</P>
<P>Обычно графика контактной площадки рисуется в определенных слоях, имена которых и правила заполнения регламентируются соответствующими программами экспорта (см.описания соответствующих программ).</P>
<P>На следующем рисунке представлен пример контактной площадки.</P>
<P><IMG SRC="Image18.gif"></P>

<h1><A NAME="chComp">Компоненты</A></h1>
<P><i>Компоненты</I> представляют собой отображение реального элемента с конкретным схемным изображением (<A HREF="#chSymbol"><U><FONT FACE="Times New Roman" COLOR="#0000ff">Символом</U></FONT></A><FONT FACE="Times New Roman">) и конкретным изображением корпуса (</FONT><A HREF="#chPrt"><U><FONT FACE="Times New Roman" COLOR="#0000ff">Корпусом</U></FONT></A><FONT FACE="Times New Roman">) и имеющим свои конкретные параметры. Таким образом, компонент содержит ссылку на <I>Символ</I>, ссылку на <I>Корпус</I> и перечень параметров конкретного элемента.</P>
<P ALIGN="CENTER"><IMG SRC="Image19.gif"></P>
<P>Обязательными являются ссылки на символ и на корпус. Без указания этих ссылок вставка компонента в лист схемы невозможна. Ввод параметров является желательным, но не обязательным.</P><IMG SRC="Image20.gif" ALIGN="LEFT" HSPACE=12>
</FONT><P>&nbsp;</P>
<P><B>Ссылка на символ</B> - указание <A HREF="#chSymbol">символа</A>, который используется в качестве схематического изображения данного компонента.</P>
<P><B>Ссылка на корпус</B> - указание <A HREF="#chPrt">корпуса</A>, который используется в качестве изображения корпуса данного компонента.</P>
<P><B>Параметры </B>- текст, используемый произвольным образом. Вместе с тем существуют специальные параметры, которые используются системой для своих нужд. Ниже представлена полная информация об этих параметрах.</P>
<P>Общий вид задания параметров имеет следующий вид:</P>
<P>&lt;<I>Имя параметра</I>&gt;=&lt;<I>Значение параметра</I>&gt;</P>
<P>Где <I>Имя параметра</I> и <I>Значение параметра</I> могут представлять произвольную текстовую строку. Один из параметров используемых системой называется <I>Перечень</I>. Этот параметр задает текстовую строку помещаемую в перечень элементов для данного элемента, а также для отображения в окне справки если курсор мыши находится над компонентом без движения более чем 3 секунды.</P>
<P>Ниже представлен пример записи параметра для транзистора КТ3102А</P>
<P>Перечень=КТ3102А аАО.336.122 ТУ</P>
<P>Параметр Перечень на самом деле является более комплексным. Его значение воспринимается не просто как текст, а как запись специального вида. Так, если в значении параметра встречается фраза в треугольных скобках, то она заменяется на значение параметра с таким именем. Например, набор параметров:</P>
<B>
 <P>Значение=1кОм</P>
 <P>Отклонение=+-10%</P>
 <P>Мощность=0.125</P>
 <P>Перечень=С2-33Н-&lt;Мощность&gt;-&lt;Значение&gt; &lt;Отклонение&gt;-А-В-В ОЖО.467.173ТУ</P>
</B>
<P>в процессе формирования перечня элементов будет обработан в виде:</P>
<B><P>С2-33Н-0.125-1кОм ± 10%-А-В-В ОЖО.467.173ТУ</P></B>
<P>Из приведенного примера видно, что фраза <I>&lt;Мощность&gt;</I> была заменена на значение параметра <I>Мощность</I>, <I><FONT FACE="Times New Roman">&lt;Значение&gt;</I> -- на значение параметра <I>Значение</I>, а <I>&lt;Отклонение&gt;</I> -- на значение параметра <I>Отклонение</I>.</P>
<P>Такая возможность упрощает построение смежных программ выбора компонентов (Выбор резисторов, Выбор конденсаторов), а также других сервисных программ (например программа расстановки значений на принципиальной схеме).</P>
<P>Еще один параметр используемый системой для своих нужд называется <B>ЦЕПИ</B>. Он задает имена цепей подключаемых к определенным выводам элемента и служит для автоматического формирования текстового списка цепей. На практике в этом параметре задаются цепи питания. Общий вид параметра имеет вид:</P>
<B><P>ЦЕПИ=&lt;<I>Список цепей</I>&gt;</P>
</B><P>Где <I>Список цепей</I> имеет вид:</P>
<P>&lt;<I>Имя цепи</I>&gt;(&lt;<I>Номер вывода</I>&gt;[;&lt;<I>Номер вывода</I>&gt;...])[;...]</P>
<P>Например <B>ЦЕПИ=GND(7);+5V(14)</P>
</B><P>другой пример <B>ЦЕПИ=GND(1;20);+5V(40)</P>
</B><P>еще пример <B>ЦЕПИ=+15V(18)</P>
</B>

<h1><A NAME="chSheet">Лист схемы</A></h1>
<P>Лист схемы представляет собой отражение одного реального листа принципиальной схемы. Для создания схемы в лист вставляются </FONT><A HREF="#chSymImp"><U><FONT FACE="Times New Roman" COLOR="#0000ff">вхождения символов</U></FONT></A><FONT FACE="Times New Roman"> (которые берутся из компонентов), а соединения между ними задаются с помощью цепей. В качестве декоративного оформления схемы используется графика.</P>
<P ALIGN="CENTER"><IMG SRC="Image21.gif"></P>
<P>На следующем рисунке представлен пример схемы электрической принципиальной с вставленными различными объектами.</P>
<P><IMG SRC="Image22.gif"></P>
<B><P>Графика</B> -служит для оформления схемы, для улучшения ее читабельности и т.п. В качестве примеров графики можно привести пример рамки стандартного формата.</P>
<B><P>Вхождения символов</B> - образуют схематические изображения компонентов входящих в схему.</P>
<B><P>Цепи</B> - это набор связей между схематическими изображениями компонентов вместе составляющих принципиальную схему.</P>
<B><P>Текстовый список цепей</B> - если цепи представляют собой связи между компонентами в графическом виде (в виде линий), то этот объект задает связи между компонентами в виде текстового списка, который представляет собой записи вида &lt;Позиционное обозначение компонента&gt;-&lt;ножка компонента&gt;-&lt;имя цепи&gt;, к которой подключается эта ножка</FONT>.<FONT FACE="Times New Roman"> В листе схемы этот объект представляется текстовыми требованиями к конструкции, которые могут иметь произвольный вид.</P>
<B><P>Коментарий</B> - задает любую текстовую информацию, которую пользователь использует по своему усмотрению. Так в библиотеках фрагментов в коментариях задается описание фрагмента.</P>

<h1><A NAME="chArea">Область печатной платы</A></h1>
<P>Область печатной платы представляет собой замкнутую область ограниченную ломаной линией, которая ограничивает на схеме область, принадлежащую определенной плате. На одном листе схемы может быть произвольное число областей. Несколько областей на одном или различных листах могут отражать одну печатную плату.</P>
<P ALIGN="CENTER"><IMG SRC="Image23.gif"></P>
<P>Для каждой области осуществляется собственная автоматическая правильная нумерация. При переносе объектов из одной области платы в другую переносятся и соответствующие корпуса. Если объекты находятся вне всех областей, то их корпуса находятся в стандартной печатной плате с названием Конструктив. Эта печатная плата создается автоматически при вставке первого символа в лист принципиальной схемы.</P>

<h1><A NAME="chSymImp">Вхождение символа</A></h1>
<P>Вхождение символа представляет собой одну секцию элемента на принципиальной схеме. Если например в проекте есть один символ резистора, то вхождений символа резистора может быть произвольное количество. Все вхождения символов в совокупности с цепями и графикой составляют схему электрическую.</P>
<P ALIGN="CENTER"><IMG SRC="Image24.gif"></P>
<B><P>Ссылка на символ</B> – графика вхождения <A HREF="#chSymbol">символа</A> определяется соответствующим символом. Поэтому если вхождение символа является резистором, то его внешний вид будет задаваться соответствующим символом резистора.</P>
<B><P>Ссылка на компонент</B> – любое вхождение символа создается вставкой соответствующего <A HREF="#chComp">компонента</A>, при этом вхождение символа наследует от компонента символ, параметры и корпус.</P>
<B><P>Ссылка на корпус</B> – при создании вхождения символа автоматически в соответствующую плату добавляется (при необходимости) соответствующее </FONT><A HREF="#chPrtImp">вхождение корпус</A>, который берется из компонента.</P>
<B><P>Ориентация</B> – любое вхождение символа может иметь одну из четырех возможных ориентаций. Ориентация отражает угол поворота графики символа относительно точки привязки символа.</P>
<B><P>Зеркальность</B> – задает прямое или зеркальное отображение символа. Зеркальность символа осуществляется относительно точки привязки символа по оси X.</P>
<B><P>Параметры</B> – определяют конкретные параметры вхождения символа в схеме. Для многих элементов изменение параметров не требуется и они остаются такими-же как и в соответствующем компоненте. Это касается микросхем, разъемов, транзисторов, диодов и т.п. Для некоторых элементов требуется конкретное задание параметров. В первую очередь это касается резисторов и конденсаторов, для которых необходимо задание сопротивления и емкости соответственно. Исходя из конкретных параметров может изменяться и корпус компонента. Поэтому для автоматизации процедуры изменения параметров и точного соответствия корпуса компонента выбранным параметрам существуют специальные программы-мастера по подбору соответствующих компонентов.</P>
<P ALIGN="CENTER"><IMG SRC="Image25.gif"></P>

<h1><A NAME="chWires">Цепи</A></h1>
<P>Цепи служат для отражения электрических связей на схеме электрической. Цепи представляют собой отрезки прямых линий соединяющих между собой ножки компонентов, что в совокупности составляет схему электрическую. Каждая цепь имеет свое имя и является в проекте глобальной, т.е. если отрезки цепей на одном или различных листах схемы имеют одинаковое название, то они вместе составляют одну электрическую цепь, а ножки принадлежащие этой цепи – электрически соеденены.</P>
<P>Цепи составляются из отрезков. Каждый отрезок имеет следующие атрибуты:</P>
<P>имя цепи, к которой принадлежит отрезок</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P ALIGN="CENTER"><IMG SRC="Image26.gif"></P>

<h1 align="center"><A NAME="chNetList">Список цепей</A></h1>
<P>Комплексный объект, который задает соединения, которые не отражены в схеме (подключения выводов к цепям питания и т.д.). Перечень цепей может сканироваться автоматически (исходя из параметров компонентов) и корректироваться вручную. Визуально этот объект выглядит как указания конструктору. Внутри системы список цепей представляется в виде таблицы, в которой задается Компонент, Номер вывода компонента, к которому подключается цепь и имя цепи, которая подключается к указанному выводу. На схеме электрической список цепей представлен в виде указаний конструктору, которые имеют произвольный текстовый вид, который в общем случае не связан с таблицей списка цепей. Другими словами в раздел указаний конструктору можно записать совершенно другое, нежели отражено в таблице списка цепей. Такая свобода предназначена для того, чтобы список цепей можно было оформить произвольным образом, а также чтобы в указания конструктору можно было внести не только список цепей.</P>
<P ALIGN="CENTER"><IMG SRC="Image27.gif"></P>
<P>Для задания списка цепей предназначено диалоговое окно приведенное на рисунке. В верхней части диалогового окна находится собственно таблица цепей. В нижней части окна находится текстовое указание конструктору. Обе части могут составляться автоматически и корректироваться вручную. Список цепей располагается в
<A HREF="#chLayers"><U><FONT FACE="Times New Roman" COLOR="#0000ff">слое</U></FONT></A><FONT FACE="Times New Roman"> расположения графики.</P>

<h1 ALIGN="CENTER"><A NAME="chPlate">Печатная плата</A></h1>
<P>Печатная плата представляет собой отражение реальной печатной платы. Именно печатная плата используется для расстановки элементов по поверхности ПП и проведения трассировки печатных соединений. Создание печатной платы значительно автоматизировано. В любой момент времени печатная плата представляет собой точный эквивалент принципиальной схемы. Т.е. любое изменение принципиальной схемы тут же отражается в печатной плате. В каждом проекте может быть произвольное количество печатных плат. Компоненты на принципиальной схеме расположенные внутри области платы помещаются в соответствующую плату. Компоненты, которые не принадлежат ни одной области располагаются в печатной плате с названием <I>Конструктив</I>. Эта печатная плата создается автоматически при добавлении первого вхождения символа в схему. Вы не должны переименовывать или удалять эту плату. Если весь проект состоит из единственной платы (наиболее частый случай), то <I>Конструктив</I> и будет этой платой.</P>
<P ALIGN="CENTER"><IMG SRC="Image28.gif"></P>
<P>На следующем рисунке представлен пример еще не оттрассированной печатной платы с различными объектами на ней. Неоттрассированные связи обозначаются так называемыми <B>резинками</B>.</P>
<P><IMG SRC="Image29.gif"></P>
<B><P>Графика</B> -служит для оформления платы, а в случае использования автоматической трассировки и расстановки служит также для указания границ расстановки (слой Контур платы) и границ трассировки (слой Границы трассировки). Графика может служить также для расстановки размеров печатной платы и рисования сборочного чертежа.</P>
<B><P>Вхождения корпусов</B> - образуют набор корпусов составляющих печатную плату и адекватно отражающих принципиальную схему.</P>
<B><P>Цепи</B> - это эквивалент реальным печатным проводникам, задающим связи между элементами. В случае отсутствия печатных проводников связи отображаются в виде <I>резинок</I>.</P>
<B><P>Коментарий</B> - задает любую текстовую информацию, которую пользователь использует по своему усмотрению.</P>

<h1 ALIGN="CENTER"><A NAME="chPrtImp">Вхождение корпуса</A></h1>
<P>Вхождение корпуса представляет собой один корпус элемента на печатной плате или в конструктиве. Если например в проекте есть один корпус DIP14, то вхождений корпуса DIP14 может быть произвольное количество. Все вхождения корпусов в совокупности с дорожками и графикой составляют печатную плату или конструктив.</P>
<P ALIGN="CENTER"><IMG SRC="Image30.gif"></P>
<B><P>Ссылка на корпус</B> – графика вхождения <A HREF="#chPrt">корпуса</A> определяется соответствующим корпусом. Поэтому если вхождение корпуса является микросхемой, то его внешний вид будет задаваться соответствующим корпусом микросхемы.</P>
<B><P>Ссылка на секции </B>– при создании <A HREF="#chSymImp">вхождения символа</A> автоматически в соответствующую плату добавляется (при необходимости) соответствующее вхождение корпуса, которое берется из компонента. При этом в один корпус могут входить несколько секций символа. Поэтому вхождение корпуса хранит и название компонента, что обеспечивает добавление секций только правильного компонента.</P>
<B><P>Ориентация</B> – любое вхождение корпуса может иметь одну из четырех возможных ориентаций. Ориентация отражает угол поворота графики корпуса относительно точки привязки корпуса.</P>
<B><P>Зеркальность</B> – задает прямое или зеркальное отображение корпуса. Зеркальность корпуса осуществляется относительно точки привязки корпуса по оси X. Зеркальное положение корпуса соответствует его положению на обратной стороне печатной платы.</P>
<B><P>Параметры</B> – определяют параметры корпуса в плате. При создании вхождения корпуса параметры берутся из соответствующего корпуса. Изменение параметров вхождения корпуса не возможно.</P>
<P><IMG SRC="Image31.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chPWires">Дорожки (печатные проводники)</A></h1>
<P>Дорожки или цепи представляют собой печатные проводники на печатной плате. Дорожки предназначены для обеспечения электрических связей между ножками элементов. Количество цепей и их название в печатной плате точно соответствуют схеме электрической. Поэтому после трассировки печатная плата точно отражает схему.</P>
<P>Каждая дорожка как сегмент печатного проводника имеет следующие атрибуты:</P>
<P>имя цепи, к которой принадлежит эта дорожка</P>
<P>ширина дорожки, обозначаемая в относительных единицах</P>
<P><A HREF="#chLayers">слой</A> расположения дорожки</P>
<P ALIGN="CENTER"><IMG SRC="Image32.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chVias">Переходные отверстия</A></h1>
<P>Переходные отверстия – это специальные объекты, которые обозначают переходные отверстия, которые обеспечивают электрическую связь между дорожками различных слоев. При этом система воспринимает переходные отверстия как переходы с одного слоя на другой. В этом смысле появляется</FONT> <FONT FACE="Times New Roman">возможность иметь сквозные переходные отверстия и межслойные переходные отверстия. Кроме всего прочего, каждое переходное отверстие может иметь свой собственный тип, что позволяет подключить к ним различные контактные площадки (например различные переходные отверстия могут потребоваться для цепей питания и сигнальных цепей. Таким образом переходное отверстие имеет следующие атрибуты:</P>
<P>имя цепи, к которой принадлежит переходное отверстие</P>
<P>тип, который определяет вид контактной площадки, подключаемой к переходному отверстию</P>
<P>слои, между которыми осуществляется переход</P>
<P ALIGN="CENTER"><IMG SRC="Image33.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chPoly">Полигон</A></h1>
<P>Полигон – это область металлизации на печатной плате, которая принадлежит (в общем случае) какой либо цепи. В данной системе полигон представляет собой область ограниченную замкнутой ломаной линией. По этой причине граница полигона должна быть нарисована таким образом, чтобы можно было начав обход границ в какой либо точке, не отрывая карандаш в эту же точку и вернуться, обойдя при этом весь полигон. Полигон имеет следующие атрибуты:</P>
<P>Имя цепи, к которой принадлежит полигон.</P>
<P>Толщина линии, которой рисуется граница полигона.</P>
<P>Тип линии, которой рисуется граница полигона.</P>
<P><A HREF="#chLayers">Слой</A> расположения полигона.</P>
<P ALIGN="CENTER"><IMG SRC="Image34.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chList">Перечень элементов</A></h1>
<P>Перечень элементов представляет собой ГОСТ-ориентированный перечень элементов. Этот перечень может составляться и редактироваться вручную или составляться автоматически исходя из информации занесенной в библиотечные компоненты.</P>
<P ALIGN="CENTER"><IMG SRC="Image35.gif"></P>
<P ALIGN="CENTER">&nbsp;</P>

<h1 ALIGN="CENTER"><A NAME="chLineSize"></A>Линейный размер</h1>
<P>Линейный размер это совокупность объектов, предназначенных для указания линейных размеров на печатной плате. Этот объект служит для оформления чертежей печатных плат.</P>
<P>Атрибуты линейного размера:</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P><IMG SRC="Image36.gif"></P>
<P><IMG SRC="Image37.gif"></P>
<P ALIGN="CENTER">&nbsp;</P>

<h1 ALIGN="CENTER"><A NAME="chDiamSize"></A>Диаметральный размер</h1>
<P>Диаметральный размер служит для указания на плате диаметров различных отверстий и других объектов. Диаметральный размер предназначен для оформления чертежей печатных плат.</P>
<P><IMG SRC="Image38.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chGraph"></A>Графика</h1>
<P>Графика во всех графических редакторах системы не несет особой смысловой нагрузки (исключения представлены ниже), а предназначена для удобства восприятия информации человеком. Из этого правила имеются исключения:</P>
<P>графика нарисованная в слое “Контур платы” используется для определения границ расстановки элементов при их автоматической расстановке</P>
<P>графика нарисованная в слое “Границы трассировки” используется для определения границ трассировки при автоматической трассировке соединений</P>
<P>В общем случае к графике относятся следующие объекты:</P>
<P><IMG SRC="Image39.gif"></P>
<P><B>Линия</B> - отображается в виде отрезка заданной толщины и типа.</P>
<P><B>Прямоугольник</B> - отображается в виде прямоугольника составленного из отрезков заданной толщины и типа.</P>
<P><B>Залитый прямоугольник</B> - отображается в виде залитого прямоугольника.</P>
<P><B>Дуга</B> - отображается в виде дуги с заданной толщиной и типом линии.</P>
<P><B>Окружность</B> - отображается в виде окружности с заданной толщиной и типом линии.</P>
<P><B>Текст</B> - отображается в виде текста с заданным типом выравнивания, направления, зеркальности и размера.</P>

<h1 ALIGN="CENTER"><A NAME="chLine"></A>Линия</h1>
<P>Линия определяет отрезок, соединяющий две задаваемые точки.</P>
<P>Атрибуты отрезка</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P><IMG SRC="Image40.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chRect"></A>Прямоугольник</h1>
<P>Прямоугольник определяют через два противоположных угла.</P>
<P>Атрибуты прямоугольника</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P><IMG SRC="Image41.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chFRect"></A>Залитый прямоугольник</h1>
<P>Залитый прямоугольник определяют через два противоположных угла</P>
<P>Атрибуты залитого прямоугольника</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P><IMG SRC="Image42.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chCircle"></A>Окружность</h1>
<P>Окружность определяют через точку центра и точку на окружности.</P>
<P>Атрибуты окружности</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P><IMG SRC="Image43.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chArc"></A>Дуга</h1>
<P>Дугу определяют через точку центра дуги, начальную точку дуги и конечную точку дуги. Дуга разворачивается от начальной точки к конечной против часовой стрелки.</P>
<P>Атрибуты дуги</P>
<p><a HREF="#chLayers">слой</A> расположения</P>
<P>толщина линии (от 0 до 100)</P>
<P>тип линии (сплошная, штриховая, штрих-пунктирная)</P>
<P><IMG SRC="Image44.gif"></P>

<h1 ALIGN="CENTER"><A NAME="chText"></A>Текст</h1>
<P>Текст представляет собой одну строку текста из букв и знаков специального векторного шрифта (см.векторный шрифт). Текст определяют точку привязки текста.</P>
<P>Атрибуты текста</P>
<P><A HREF="#chLayers">слой</A> расположения</P>
<P>размер текста (от 2 до 100)</P>
<P>выравнивание текста по горизонтали (положение текста относительно точки привязки текста)</P>
<P>выравнивание текста по вертикали</P>
<P>зеркальность текста</P>
<P>направление текста</P>
<P>На следующем рисунке приведены режимы выравнивания текста</P>
<P><IMG SRC="Image45.gif"></P>
<P>На следующем рисунке приведены примеры направления текста.</P>
<P><IMG SRC="Image46.gif"></P>

<hr>
<address><small>&copy Pas. Instruments Group<br>
Bryansk, 25.02.2000
</small>
</address>

</BODY>
</HTML>
