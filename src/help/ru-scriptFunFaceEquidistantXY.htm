<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <title>SaliCAD скрипт faceEquidistantXY</title>
  </head>
  <body>
    <h1 align="center">faceEquidistantXY</h1>
    <p><a href="contents.htm">Содержание</a>=&gt;<a href="script3d.htm">Скрипт
        3d</a>=&gt;<a href="script3dFun.htm">Функции 3d</a>=&gt;faceEquidistantXY</p>
    <hr>
    <h3>Формат вызова</h3>
    <p><a href="scriptTypeFace.htm">Face</a> faceEquidistantXY( <a href="scriptTypeFace.htm">Face</a>
      src, <a href="scriptTypeFloat.htm">Float</a> distance, <a href="scriptTypeMatrix.htm">Matrix</a>
      matrix ) </p>
    <h3>Описание</h3>
    <p>Эта функция строит многоугольник в плоскости XY эквидистантный
      многоугольнику src также в плоскости XY. Новая поверхность преобразуется с
      помощью матрицы. Построив стены между исходной и результирующей
      поверхностями можно получить фаску.</p>
    <h3>Параметры</h3>
    <ul>
      <li>src - исходная поверхность в плоскости XY</li>
      <li>distance - расстояние между гранями исходного и результирующего
        многоугольника. Положительные числа задают построение внутри исходного
        многоугольника (уменьшают), а отрицательные - снаружы (увеличивают)</li>
      <li>matrix - матрица преобразования результирующего многоугольника
        (поверхности)</li>
    </ul>
    <h3>Пример применения</h3>
    <p> <code>color1 = selectColor("#800000")<br>
        color2 = selectColor("#008000")<br>
        <br>
        c1 = faceCircle( 2, 10, matrix1 )<br>
        <br>
        c2 = faceEquidistantXY( c1, -0.5, matrixTranslate( matrix1, 0, 0, 3 ) )<br>
        <br>
        partModel = model( color1, color1, color1, [c1], matrix1 )<br>
        partModel = model( color2, color2, color2, [c2], matrix1 ) </code> </p>
    <p>Данный пример сформирует следующее изображение:</p>
    <p><img src="scriptFunFaceEquidistantXY.png"> </p>
    <p></p>
    <p> </p>
    <p> </p>
  </body>
</html>
