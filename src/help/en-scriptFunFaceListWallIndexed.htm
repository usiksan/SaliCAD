<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <title>SaliCAD скрипт faceListWallIndexed</title>
  </head>
  <body>
    <h1 align="center">faceListWallIndexed</h1>
    <p><a href="contents.htm">Content</a>=&gt;<a href="script3d.htm">Script 3d</a>=&gt;<a
        href="script3dFun.htm">Functions 3d</a>=&gt;<a href="contents.htm"></a>faceListWallIndexed</p>
    <hr>
    <h3>Prototype</h3>
    <h3></h3>
    <p><a href="scriptTypeFaceList.htm">FaceList</a> faceListWallIndexed( <a href="scriptTypeFace.htm">Face</a>
      src, <a href="scriptTypeFace.htm">Face</a> dst, <a href="scriptTypeFloatList.htm">FloatList</a>
      indexes ) </p>
    <h3>Description</h3>
    <h3></h3>
    <p>This function builds walls according to the indexes between the src and
      dst surfaces. The number of points in the source surfaces must be the
      same. In fact, the dst surface is usually obtained by some transformation
      of the src surface. The indexes denote the ordinal number of the edge in
      the original surfaces, starting from zero.</p>
    <h3>Parameters</h3>
    <h3></h3>
    <ul>
      <li>src - source surface (floor)</li>
      <li>dst - target surface (ceiling)</li>
      <li>indexes - a set of numbers of edges between which walls are built</li>
    </ul>
    <h3>Example</h3>
    <h3></h3>
    <p> <code> color1 = selectColor("#a00000")<br>
        <br>
        c1 = faceCircleSide( 3, 6, matrix1 )<br>
        c2 = faceDuplicateShift( c1, 4 )<br>
        <br>
        h1 = faceListWallIndexed( c1, c2, [0,1,3,4] )<br>
        <br>
        partModel = model( color1, color1, color1, h1, matrix1 )</code> </p>
    <p>This example will form the following image:</p>
    <p><img src="scriptFunFaceListWallIndexed.png"> </p>
    <p></p>
    <p> </p>
    <p> </p>
  </body>
</html>
